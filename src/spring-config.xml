<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">


    <context:annotation-config/>
    <context:component-scan base-package="com.kd.test.app.function.*"/>




    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url">
            <value>jdbc:mysql://localhost:3306/kd</value>
        </property>
        <property name="username">
            <value>hksgr</value>
        </property>
        <property name="password">
            <value>k123</value>
        </property>
        <property name="initialSize">
            <value>1</value>
        </property>
        <property name="maxWaitMillis">
            <value>60000</value>
        </property>
        <property name="maxIdle">
            <value>20</value>
        </property>
        <property name="minIdle">
            <value>3</value>
        </property>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.kd.test.app.model*"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="show_sql">true</prop>
                <prop key="hibernate.jdbc.batch_size">20</prop>
                <!--<prop key="hibernate.current_session_context_class">thread</prop>-->

                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>

            </props>
        </property>

    </bean>

    <!-- 事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>



    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 事务执行方式
              REQUIRED：指定当前方法必需在事务环境中运行，
              如果当前有事务环境就加入当前正在执行的事务环境，
              如果当前没有事务，就新建一个事务。
              这是默认值。
             -->
            <tx:method name="create*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="import*" propagation="REQUIRED" />
            <!--
              指定当前方法以非事务方式执行操作，如果当前存在事务，就把当前事务挂起，等我以非事务的状态运行完，再继续原来的事务。
              查询定义即可
              read-only="true"  表示只读
             -->
            <tx:method name="*" propagation="NOT_SUPPORTED" read-only="true" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="serviceOperation" expression="execution(* com.kd.test.app.function.service.*.* (..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
    </aop:config>

    <bean class="com.kd.test.app.function.service.impl.CpuServiceImpl" id="cpuService">
        <property name="cpuDAO" ref="cpuDAO" />
    </bean>

    <bean class="com.kd.test.app.function.service.impl.CompanyServiceImpl" id="companyService">
        <property name="companyDAO" ref="companyDAO" />
    </bean>

    <bean class="com.kd.test.app.function.service.impl.HardwareServiceImpl" id="hardwareService">
    </bean>


    <bean class="com.kd.test.app.function.dao.impl.CpuDAOImpl" id="cpuDAO">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean class="com.kd.test.app.function.dao.impl.CompanyDAOImpl" id="companyDAO">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean class="com.kd.test.app.function.dao.impl.HardwareDAOImpl" id="hardwareDAO">
    </bean>

</beans>